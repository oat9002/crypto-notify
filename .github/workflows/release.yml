name: release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Set GitHub user
        run: |
          git config --global user.name 'oat9002'
          git config --global user.email 'oat9002@hotmail.com'
      - name: Release
        run: sbt "release with-defaults"
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  githubRelease:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set GitHub user
        run: |
          git config --global user.name 'oat9002'
          git config --global user.email 'oat9002@hotmail.com'
      - name: Get latest tag
        run: |
          git pull
          echo ::set-output name=LATEST_TAG::$(git describe --tags --abbrev=0)
        id: get-latest-tag
      - name: Checkout to latest tag
        run: git checkout tags/${{ steps.get-latest-tag.outputs.LATEST_TAG }}
      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.get-latest-tag.outputs.LATEST_TAG }}

  dockerPublish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Dockerfile
        run: sbt "Docker / stage"
      - name: Go to Dockerfile dir
        run: cd ./target/docker/stage
      - name: Get current app version
        id: get-app-version
        run: echo '::set-output name=APP_VERSION::$(sbt 'show version' | tail -n1 | cut -d ' ' -f2)'
      - name: Publist to Docker Hub
        run: docker buildx build --platform=linux/amd64,linux/arm64,linux/arm/v7 -t oat9002/crypto-notify:latest -t oat9002/crypto-notify:${{ steps.get-app-version.outputs.APP_VERSION }} --push .


